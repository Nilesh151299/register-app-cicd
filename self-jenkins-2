pipeline{
    agent{label 'Jenkins-Agent'}
    tools {
         jdk 'Java17'
         maven 'Maven3' 
    }

    environment{
             APP_NAME = "register-app-pipeline1"
             RELEASE = "1.0.0"
             DOCKER_USER = "nilesh151299"
             IMAGE_NAME = "${DOCKER_USER}/${APP_NAME}"
             IMAGE_TAG  =  "${RELEASE}-${BUILD_NUMBER}"

    }
   stages{
        stage("Cleanup Workspace"){
          steps{
             cleanWs()
             } 
        }

        stage("Cheackuot from SCM"){
              steps{
              git branch: 'main', credentialsId: 'github' , url:'https://github.com/Nilesh151299/register-app-cicd.git'   
              } 
        }
    

       stage("Build Application"){
              steps {
              sh "mvn clean package"
              }
        }

       stage("Test Application"){
             steps{
             sh "mvn test" 
             }
       }

       stage("SonarQube Analysis"){
             steps{
                script{
                    withSonarQubeEnv(credentialsId: 'jenkins-sonar-qube-token'){
                           sh "mvn sonar:sonar"                                    
                      }
                  }
            } 
       }
  
       stage("Quality Gate"){
             steps{
                script{
                     waitForQualityGate abortPipeline: false, credentialsId: 'jenkins-sonar-qube-token'
                }

             }
        
        }


       stage("Build and Push Docker Image") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'Docker@123', url: 'https://index.docker.io/v1/') {
                        def docker_image = docker.build("${IMAGE_NAME}")
                        docker_image.push("${IMAGE_TAG}")
                        docker_image.push("latest")
                    }
                }
            }
        }




    }

}
